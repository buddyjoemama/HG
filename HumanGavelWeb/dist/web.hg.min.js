(function() {
    "use strict";
    angular.module("humanGavelUser.app", [ "ngRoute", "ui.bootstrap" ]);
})();

(function() {
    angular.module("humanGavelUser.app").directive("infiniteScroll", infiniteScroll);
    infiniteScroll.$inject = [ "$rootScope", "casesService" ];
    function infiniteScroll($rootScope, casesService) {
        function compile(element, attrs) {
            var parentElement = element.parent();
            var itemsPerRow = parseInt(attrs.count);
            var currentIndex = 0;
            var row = $('<div class="row"></div>');
            parentElement.append(row);
            return function($scope, $element, $att, $ctrl, $transclude) {
                $scope.$watch("$items", function(collection, evt, $scope) {
                    if (!collection) return;
                    for ($scope.$currentIndex; $scope.$currentIndex < collection.length; $scope.$currentIndex++) {
                        if ($scope.$currentIndex > 0 && $scope.$currentIndex % itemsPerRow == 0) {
                            var space = $("<div class='case-md-space'>&nbsp;</div>");
                            row.append(space);
                        }
                        $transclude(function(clone, scope) {
                            scope.item = collection[$scope.$currentIndex];
                            clone.addClass("col-sm-4");
                            row.append(clone);
                        });
                    }
                });
            };
        }
        function controller($scope) {
            $scope.$currentIndex = 0;
            $scope.$items = [];
            $scope.$currentFilter = "trending";
            $scope.$on("filterChanged", function(event, key) {
                if ($scope.$currentFilter != key) {
                    console.log("Changing filter to: " + key);
                    $scope.$currentFilter = key;
                    casesService.getSampleData(key, function(res) {});
                }
            });
            $scope.init = function() {
                $scope.$items = casesService.getSampleData();
            };
            $scope.init();
        }
        return {
            compile: compile,
            scope: true,
            multiElement: true,
            priority: 1e3,
            transclude: "element",
            controller: controller
        };
    }
})();

(function() {
    angular.module("humanGavelUser.app").directive("ngChart", ngChart).directive("ngChartTemplate", ngChartTemplate);
    ngChart.$inject = [ "$rootScope", "$filter" ];
    function ngChart($rootScope, $filter) {
        function link(scope, element, attrs) {
            scope.$chartData = scope.$eval(attrs.series);
        }
        return {
            link: link,
            scope: true,
            templateUrl: "templates/chart.html"
        };
    }
    ngChartTemplate.$inject = [ "$rootScope", "$filter" ];
    function ngChartTemplate($rootScope, $filter) {
        function link(scope, element, attrs) {
            scope.$watch(attrs.series, function(val) {
                scope.$chartData = scopeFromSeries(angular.copy(val), $filter);
            });
        }
        return {
            link: link,
            scope: true
        };
    }
})();

(function() {
    angular.module("humanGavelUser.app").directive("ngCountdown", ngCountdown);
    ngCountdown.$inject = [ "$rootScope", "$interval" ];
    function ngCountdown($rootScope, $interval) {
        function link(scope, element, attrs) {
            function updateTime() {
                var d2 = moment(scope.endDate, "MM-DD-YYYY");
                var diff = moment.duration(d2.diff(moment()));
                var months = diff.asMonths();
                var days = Math.floor(diff.asDays());
                var hours = diff.hours();
                var mins = diff.minutes();
                var secs = diff.seconds();
                var remaining = "";
                if (days > 0) {
                    remaining += days + "d ";
                }
                if (diff.asHours() > 0) {
                    remaining += hours + "h ";
                }
                if (diff.asMinutes() > 0) {
                    remaining += mins + "m ";
                }
                if (diff.asSeconds() > 0) {
                    remaining += secs + "s";
                }
                if (diff.milliseconds() >= 0) {
                    scope.content = remaining + " remaining";
                } else {
                    scope.content = "Voting Closed";
                    $interval.cancel(scope.timer);
                }
            }
            element.on("$destroy", function() {
                $interval.cancel(scope.timer);
            });
            scope.timer = $interval(updateTime, 1e3);
            updateTime();
        }
        return {
            link: link,
            templateUrl: "templates/countdown.html",
            scope: {
                endDate: "@"
            }
        };
    }
})();

(function() {
    angular.module("humanGavelUser.app").directive("ngImage", ngImage);
    ngImage.$inject = [ "$interpolate", "$compile" ];
    function ngImage($interpolate, $compile) {
        function link(scope, element, attr) {
            scope.$watch(attr.ngImage, function(val) {
                element.css("backgroundImage", "url(" + val + ")");
            });
        }
        return {
            link: link
        };
    }
})();

(function() {
    angular.module("humanGavelUser.app").directive("popup", popup);
    popup.$inject = [ "$rootScope" ];
    function popup($rootScope) {
        function link(scope, element, attr) {
            scope.hello = "test";
        }
        return {
            link: link,
            scope: true
        };
    }
})();

(function() {
    angular.module("humanGavelUser.app").directive("voteDetails", voteDetails);
    voteDetails.$inject = [ "$rootScope" ];
    function voteDetails($rootScope) {
        function link(scope, element, attr) {
            scope.$$choices = [];
            scope.$watch(attr.series, function(val) {
                scope.$$choices = val.voteData;
                scope.$$id = val.caseId;
            });
        }
        return {
            link: link,
            templateUrl: "templates/voteChoices.html"
        };
    }
})();

(function() {
    angular.module("humanGavelUser.app").factory("casesService", casesService);
    function casesService($rootScope, $http) {
        this.getData = function(category, callback) {
            $http.get("api/content/cases/" + category).then(function(res) {
                callback(res);
            });
        };
        this.getSampleData = function() {
            return [ {
                name: "Trump v. Clinton",
                voteData: [ {
                    name: "Trump",
                    value: 1212,
                    participantId: 1
                }, {
                    name: "Clinton",
                    value: 2323,
                    participantId: 2
                } ],
                image: "Samples/One/ClintonTrump.jpg",
                caseEndDate: "8/20/2016",
                caseId: 0
            }, {
                name: "Coke v. Pepsi",
                voteData: [ {
                    name: "Coke",
                    value: 1212,
                    participantId: 3
                }, {
                    name: "Pepsi",
                    value: 2323,
                    participantId: 4
                } ],
                image: "Samples/Two/cokepepsi.jpg",
                caseEndDate: "1/1/2017",
                caseId: 1
            }, {
                name: "Bills v. Dolphins",
                voteData: [ {
                    name: "Bills",
                    value: 1212,
                    participantId: 5
                }, {
                    name: "Dolphins",
                    value: 2323,
                    participantId: 5
                } ],
                image: "Samples/Three/billsdolphins.jpg",
                caseEndDate: "1/1/2017",
                caseId: 2
            }, {
                name: "Browns v. Bears",
                voteData: [ {
                    name: "Browns",
                    value: 7623,
                    participantId: 7
                }, {
                    name: "Bears",
                    value: 5411,
                    participantId: 78
                } ],
                image: "Samples/Four/bears.jpeg",
                caseEndDate: "1/1/2017",
                caseId: 3
            } ];
        };
        return this;
    }
})();

(function() {
    "use strict";
    angular.module("humanGavelUser.app").component("hgCarousel", {
        templateUrl: "Components/Carousel/carousel.html",
        controller: function(casesService) {
            var $ctrl = this;
            $ctrl.slides = casesService.getSampleData();
        }
    });
})();

(function() {
    angular.module("humanGavelUser.app").directive("hgCase", ngCase);
    function ngCase($location, $rootScope, $location, $uibModal, $compile) {
        function link(scope, element, attrs) {
            var caseObject = scope.$eval(attrs.case);
            scope.$$image = caseObject.image;
            scope.$$name = caseObject.name;
            scope.$$caseEndDate = caseObject.caseEndDate;
            scope.$$case = null;
            scope.$$showCaseData = false;
            scope.$$selected = false;
            element.click(function() {
                $uibModal.open({
                    component: "hgCaseDetails",
                    resolve: {
                        case: function() {
                            return caseObject;
                        }
                    }
                });
            });
        }
        return {
            link: link,
            scope: true,
            templateUrl: "templates/case.html"
        };
    }
})();

(function() {
    "use strict";
    angular.module("humanGavelUser.app").component("hgCaseDetails", {
        templateUrl: "Components/CaseDetails/hgCaseDetails.html",
        bindings: {
            resolve: "<",
            close: "&",
            dismiss: "&"
        },
        controller: function($filter) {
            var $ctrl = this;
            $ctrl.$onInit = function() {
                $ctrl.case = scopeFromSeries($ctrl.resolve.case, $filter);
            };
        }
    });
})();

function scopeFromSeries(jsonData, $filter) {
    var chartData = jsonData;
    chartData.$total = 0;
    chartData.voteData.forEach(function(item) {
        item.value = parseInt(item.value);
        chartData.$total += item.value;
    });
    chartData.voteData.forEach(function(item, index) {
        item.percent = Math.round(item.value / chartData.$total * 100);
        item.pct = item.percent + "%";
        item.value = $filter("number")(item.value);
        item.isLast = index == chartData.voteData.length - 1;
    });
    return chartData;
}

(function() {
    "use strict";
    angular.module("humanGavelUser.app").component("hgCaseList", {
        templateUrl: "Components/CaseList/hgCaseList.html",
        controller: function(casesService) {
            var $ctrl = this;
            $ctrl.cases = casesService.getSampleData();
        }
    });
})();

(function() {
    angular.module("humanGavelUser.app").component("hgNavMenu", {
        templateUrl: "Components/NavMenu/hgNavMenu.html",
        controller: function() {
            var $ctrl = this;
            $ctrl.$currentFilter = "trending";
        }
    });
})();